/*

SQL Project

==============================================================================

Create Database 'DataWarehouse' and Schemas

==============================================================================

Script Purpose:
	This script creates a new database named 'DataWarehouse' after checking if it already exists.
	If the database exists, it is dropped and recreated. Additionally, the script sets up three schemas
	within the database: 'Bronze', 'Silver' and 'Gold'.

WARNING:
	Running this script will drop the entire 'DataWarehouse' database if it exists.
	All data in the database will be permanently deleted. Proceed with caution
	and ensure you have proper backups before running this script.

*/

USE master;
GO

-- Drop and recreate the 'DataWarehouse' database

IF EXISTS (SELECT 1 FROM sys.databases WHERE name = 'DataWarehouse')
BEGIN
	ALTER DATABASE DataWarehouse SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
	DROP DATABASE DataWarehouse;
END;
GO

CREATE DATABASE DataWarehouse;

USE DataWarehouse;

CREATE SCHEMA Bronze;
GO
CREATE SCHEMA Silver;
GO
CREATE SCHEMA Gold;
GO

-- GO: Separate batches when working with multiple SQL statements.

/*

Bronze Layer

*** Analyze and understand Source Systems: Set up a meeting with the Source Systems experts in order to interview them, to ask them
a lot of stuff about the source (check ''Most common questions before connecting sources to DB'' snapshot).

*** Create DDL for tables: You can ask the technical experts of the source systems or directly check the sources to try to define
the structure of your tables and the data types.

*/

-- CREATE TABLE statements for the crm and erp sources:

CREATE TABLE Bronze.crm_cust_info (
	cst_id				INT,
	cst_key				NVARCHAR(50),
	cst_firstname		NVARCHAR(50),
	cst_lastname		NVARCHAR(50),
	cst_marital_status	NVARCHAR(50),
	cst_gndr			NVARCHAR(50),
	cst_create_date		DATETIME
)

CREATE TABLE Bronze.crm_prd_info (
	prd_id			INT,
	prd_key			NVARCHAR(50),
	prd_nm			NVARCHAR(50),
	prd_cost		INT,
	prd_line		NVARCHAR(50),
	prd_start_dt	DATETIME,
	prd_end_dt		DATETIME
)

CREATE TABLE Bronze.crm_sales_details (
	sls_ord_num		NVARCHAR(50),
	sls_prd_key		NVARCHAR(50),
	sls_cust_id		INT,
	sls_order_dt	INT,
	sls_ship_dt		INT,
	sls_due_dt		INT,
	sls_sales		INT,
	sls_quantity	INT,
	sls_price		INT
)

CREATE TABLE Bronze.erp_cust_az12 (
	cid		NVARCHAR(50),
	bdate	DATE,
	gen		NVARCHAR(50)
)

CREATE TABLE Bronze.erp_loc_a101 (
	cid		NVARCHAR(50),
	cntry	NVARCHAR(50)
)

CREATE TABLE Bronze.erp_px_cat_g1v2 (
	id				NVARCHAR(50),
	cat				NVARCHAR(50),
	subcat			NVARCHAR(50),
	maintenance		NVARCHAR(50)
)

/*

T-SQL could be used before the CREATE TABLE statements in case we need to redo the table.

IF OBJECT_ID ('tablename', 'U') IS NOT NULL
	DROP TABLE tablename;

*/

-- BULK INSERT

BULK INSERT Bronze.crm_cust_info
FROM 'D:\Data Analytics\SQL\SQL Project\sql-data-warehouse-project\datasets\source_crm\cust_info.csv'
WITH (
	FIRSTROW = 2,				-- Used to identify first row including actual data (meaning, row 1 contains the header).
	FIELDTERMINATOR = ',',		-- Used to identify the separator.
	TABLOCK						-- It locks the table as it's being updated.
);

/*

Once I've run the BULK statement, I'm going to:
	
	- Check the data that has been loaded.
	- Use the COUNT function to compare the number of rows loaded VS number of rows in the source.
	- I could use the TRUNCATE statement before the BULK INSERT for those cases when I need to delete all the data within the table
	before inserting new data:

		TRUNCATE TABLE tablename;

	TRUNCATE: Quickly delete all rows from a table, resetting it to an empty state.

*/

BULK INSERT Bronze.crm_prd_info
FROM 'D:\Data Analytics\SQL\SQL Project\sql-data-warehouse-project\datasets\source_crm\prd_info.csv'
WITH (
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	TABLOCK
);

BULK INSERT Bronze.crm_sales_details
FROM 'D:\Data Analytics\SQL\SQL Project\sql-data-warehouse-project\datasets\source_crm\sales_details.csv'
WITH (
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	TABLOCK
);

BULK INSERT Bronze.erp_cust_az12
FROM 'D:\Data Analytics\SQL\SQL Project\sql-data-warehouse-project\datasets\source_erp\cust_az12.csv'
WITH (
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	TABLOCK
);

BULK INSERT Bronze.erp_loc_a101
FROM 'D:\Data Analytics\SQL\SQL Project\sql-data-warehouse-project\datasets\source_erp\loc_a101.csv'
WITH (
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	TABLOCK
);

BULK INSERT Bronze.erp_px_cat_g1v2
FROM 'D:\Data Analytics\SQL\SQL Project\sql-data-warehouse-project\datasets\source_erp\px_cat_g1v2.csv'
WITH (
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	TABLOCK
);
